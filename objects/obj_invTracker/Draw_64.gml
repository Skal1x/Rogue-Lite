draw_set_font(fnt_genericSmallDebug);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

if (isLoaded) {
	draw_set_color(c_black);
	draw_text(x + 1, y + 1 + 0 * 12, "GENERAL");
	draw_text(x + 1, y + 1 + 1 * 12, "  Name: " + string(weaponStats.general.gName));
	draw_text(x + 1, y + 1 + 2 * 12, "  Type: " + string(weaponStats.general.gType));
	draw_text(x + 1, y + 1 + 3 * 12, "  Rarity: " + string(weaponStats.general.rarity) + " (1=lowest, 5=Highest)");
	draw_text(x + 1, y + 1 + 4 * 12, "  Mag-Capacity: " + string(weaponStats.general.magCap));
	draw_text(x + 1, y + 1 + 5 * 12, "  Ammo in Mag: " + string(weaponStats.general.ammoInMag));
	draw_text(x + 1, y + 1 + 6 * 12, "  Ammo in Reserve: " + string(weaponStats.general.ammoInRes));
	draw_text(x + 1, y + 1 + 7 * 12, "STATS");
	draw_text(x + 1, y + 1 + 8 * 12, "  Damage: " + string(weaponStats.stats.damage));
	draw_text(x + 1, y + 1 + 9 * 12, "  Firerate: " + string(weaponStats.stats.fireRate));
	draw_text(x + 1, y + 1 + 10 * 12, "  Fire-Mode: " + string(weaponStats.stats.fireMode));
	draw_text(x + 1, y + 1 + 11 * 12, "  Is SingleShot: " + string(weaponStats.stats.isSingleShot));
	draw_text(x + 1, y + 1 + 12 * 12, "  Burst:" );
	draw_text(x + 1, y + 1 + 13 * 12, "    Size: " + string(weaponStats.stats.burst.size));
	draw_text(x + 1, y + 1 + 14 * 12, "    Remaining: " + string(weaponStats.stats.burst.remaining));
	draw_text(x + 1, y + 1 + 15 * 12, "  Pellets/Shot: " + string(weaponStats.stats.pelletsPerShot));
	draw_text(x + 1, y + 1 + 16 * 12, "  Spread: " + string(weaponStats.stats.spread));
	draw_text(x + 1, y + 1 + 17 * 12, "  Firing Inac.: " + string(weaponStats.stats.fireInaccuracy));
	draw_text(x + 1, y + 1 + 18 * 12, "  Bullet:");
	draw_text(x + 1, y + 1 + 19 * 12, "    Type: " + string(weaponStats.stats.bullet.bType));
	draw_text(x + 1, y + 1 + 20 * 12, "    Speed: " + string(weaponStats.stats.bullet.bSpeed));
	draw_text(x + 1, y + 1 + 21 * 12, "    Range: " + string(weaponStats.stats.bullet.bRange));
	draw_text(x + 1, y + 1 + 22 * 12, "  R-Effect: " + string(weaponStats.stats.randomEffect));
	draw_text(x + 1, y + 1 + 23 * 12, "  Explosion:");
	draw_text(x + 1, y + 1 + 24 * 12, "    Radius: " + string(weaponStats.stats.explosion.radius));
	draw_text(x + 1, y + 1 + 25 * 12, "    Damage: " + string(weaponStats.stats.explosion.damage));
	draw_text(x + 1, y + 1 + 26 * 12, "STATUS");
	draw_text(x + 1, y + 1 + 27 * 12, "  State:" + string(weaponStats.status.state));
	draw_text(x + 1, y + 1 + 28 * 12, "  Fire-Ready:" + string(weaponStats.status.fireReady));
	draw_text(x + 1, y + 1 + 29 * 12, "  Cooldown:" + string(weaponStats.status.fireReadyCD));
	draw_text(x + 1, y + 1 + 30 * 12, "RELOAD");
	draw_text(x + 1, y + 1 + 31 * 12, "  Ejection:");
	draw_text(x + 1, y + 1 + 32 * 12, "    Time:" + string(weaponStats.reload.ejection.time));
	draw_text(x + 1, y + 1 + 33 * 12, "    Time-Remaining:" + string(weaponStats.reload.ejection.timeRemaining));
	draw_text(x + 1, y + 1 + 34 * 12, "    Status:" + string(weaponStats.reload.ejection.status));
	draw_text(x + 1, y + 1 + 35 * 12, "  Loading:");
	draw_text(x + 1, y + 1 + 36 * 12, "    Time:" + string(weaponStats.reload.loading.time));
	draw_text(x + 1, y + 1 + 37 * 12, "    Time-Remaining:" + string(weaponStats.reload.loading.timeRemaining));
	draw_text(x + 1, y + 1 + 38 * 12, "    HotSpot-Start:" + string(weaponStats.reload.loading.hSTimeframeStart));
	draw_text(x + 1, y + 1 + 39 * 12, "    HotSpot-Stop:" + string(weaponStats.reload.loading.hSTimeframeStop));
	draw_text(x + 1, y + 1 + 40 * 12, "    HotSpot Failed:" + string(weaponStats.reload.loading.hSFailed));
	draw_text(x + 1, y + 1 + 41 * 12, "  Chambering:");
	draw_text(x + 1, y + 1 + 42 * 12, "    Time:" + string(weaponStats.reload.chamber.time));
	draw_text(x + 1, y + 1 + 43 * 12, "    Time-Remaining:" + string(weaponStats.reload.chamber.timeRemaining));
	draw_text(x + 1, y + 1 + 44 * 12, "    Status:" + string(weaponStats.reload.chamber.inProcess));
	draw_text(x + 1, y + 1 + 45 * 12, "    HotSpot-Start:" + string(weaponStats.reload.chamber.hSTimeframeStart));
	draw_text(x + 1, y + 1 + 46 * 12, "    HotSpot-Stop:" + string(weaponStats.reload.chamber.hSTimeframeStop));
	draw_text(x + 1, y + 1 + 47 * 12, "    HotSpot Failed:" + string(weaponStats.reload.chamber.hSFailed));
	

	draw_set_color(make_color_rgb(62, 146, 204));
	draw_text(x, y + 0 * 12, "GENERAL");
	draw_text(x, y + 1 * 12, "  Name: " + string(weaponStats.general.gName));
	draw_text(x, y + 2 * 12, "  Type: " + string(weaponStats.general.gType));
	draw_text(x, y + 3 * 12, "  Rarity: " + string(weaponStats.general.rarity) + " (1=lowest, 5=Highest)");
	draw_text(x, y + 4 * 12, "  Mag-Capacity: " + string(weaponStats.general.magCap));
	draw_text(x, y + 5 * 12, "  Ammo in Mag: " + string(weaponStats.general.ammoInMag));
	draw_text(x, y + 6 * 12, "  Ammo in Reserve: " + string(weaponStats.general.ammoInRes));
	draw_text(x, y + 7 * 12, "STATS");
	draw_text(x, y + 8 * 12, "  Damage: " + string(weaponStats.stats.damage));
	draw_text(x, y + 9 * 12, "  Firerate: " + string(weaponStats.stats.fireRate));
	draw_text(x, y + 10 * 12, "  Fire-Mode: " + string(weaponStats.stats.fireMode));
	draw_text(x, y + 11 * 12, "  Is SingleShot: " + string(weaponStats.stats.isSingleShot));
	draw_text(x, y + 12 * 12, "  Burst:" );
	draw_text(x, y + 13 * 12, "    Size: " + string(weaponStats.stats.burst.size));
	draw_text(x, y + 14 * 12, "    Remaining: " + string(weaponStats.stats.burst.remaining));
	draw_text(x, y + 15 * 12, "  Pellets/Shot: " + string(weaponStats.stats.pelletsPerShot));
	draw_text(x, y + 16 * 12, "  Spread: " + string(weaponStats.stats.spread));
	draw_text(x, y + 17 * 12, "  Firing Inac.: " + string(weaponStats.stats.fireInaccuracy));
	draw_text(x, y + 18 * 12, "  Bullet:");
	draw_text(x, y + 19 * 12, "    Type: " + string(weaponStats.stats.bullet.bType));
	draw_text(x, y + 20 * 12, "    Speed: " + string(weaponStats.stats.bullet.bSpeed));
	draw_text(x, y + 21 * 12, "    Range: " + string(weaponStats.stats.bullet.bRange));
	draw_text(x, y + 22 * 12, "  R-Effect: " + string(weaponStats.stats.randomEffect));
	draw_text(x, y + 23 * 12, "  Explosion:");
	draw_text(x, y + 24 * 12, "    Radius: " + string(weaponStats.stats.explosion.radius));
	draw_text(x, y + 25 * 12, "    Damage: " + string(weaponStats.stats.explosion.damage));
	draw_text(x, y + 26 * 12, "STATUS");
	draw_text(x, y + 27 * 12, "  State:" + string(weaponStats.status.state));
	draw_text(x, y + 28 * 12, "  Fire-Ready:" + string(weaponStats.status.fireReady));
	draw_text(x, y + 29 * 12, "  Cooldown:" + string(weaponStats.status.fireReadyCD));
	draw_text(x, y + 30 * 12, "RELOAD");
	draw_text(x, y + 31 * 12, "  Ejection:");
	draw_text(x, y + 32 * 12, "    Time:" + string(weaponStats.reload.ejection.time));
	draw_text(x, y + 33 * 12, "    Time-Remaining:" + string(weaponStats.reload.ejection.timeRemaining));
	draw_text(x, y + 34 * 12, "    Status:" + string(weaponStats.reload.ejection.status));
	draw_text(x, y + 35 * 12, "  Loading:");
	draw_text(x, y + 36 * 12, "    Time:" + string(weaponStats.reload.loading.time));
	draw_text(x, y + 37 * 12, "    Time-Remaining:" + string(weaponStats.reload.loading.timeRemaining));
	draw_text(x, y + 38 * 12, "    HotSpot-Start:" + string(weaponStats.reload.loading.hSTimeframeStart));
	draw_text(x, y + 39 * 12, "    HotSpot-Stop:" + string(weaponStats.reload.loading.hSTimeframeStop));
	draw_text(x, y + 40 * 12, "    HotSpot Failed:" + string(weaponStats.reload.loading.hSFailed));
	draw_text(x, y + 41 * 12, "  Chambering:");
	draw_text(x, y + 42 * 12, "    Time:" + string(weaponStats.reload.chamber.time));
	draw_text(x, y + 43 * 12, "    Time-Remaining:" + string(weaponStats.reload.chamber.timeRemaining));
	draw_text(x, y + 44 * 12, "    Status:" + string(weaponStats.reload.chamber.inProcess));
	draw_text(x, y + 45 * 12, "    HotSpot-Start:" + string(weaponStats.reload.chamber.hSTimeframeStart));
	draw_text(x, y + 46 * 12, "    HotSpot-Stop:" + string(weaponStats.reload.chamber.hSTimeframeStop));
	draw_text(x, y + 47 * 12, "    HotSpot Failed:" + string(weaponStats.reload.chamber.hSFailed));
}